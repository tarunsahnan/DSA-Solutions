//Question Link --> https://leetcode.com/problems/unique-paths-ii/


int dp[105][105];
    
    int rec(int m, int n, vector<vector<int>>& grid){
        
        if(m <0 or n<0)  return 0;
        
        if(grid[m][n] == 1)
            return 0;
        
       if( m==0 and n==0)
            return 1;
        
        
        if( dp[m][n] != 0) return dp[m][n];
        
        return dp[m][n] = rec(m-1,n,grid) + rec(m,n-1,grid);
        
    }
    
     int uniquePathsWithObstacles(vector<vector<int>>& Grid){
         if(Grid[0][0] == 1 || Grid[Grid.size()-1][Grid[0].size()-1] == 1) return 0;
         return rec(Grid.size()-1,Grid[0].size()-1, Grid);
     }
